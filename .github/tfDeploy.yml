name: 'TF-Deploy'
on:
  workflow_dispatch:
  pull_request:
    branches:
      - master

jobs:
  Plan_Dev_Deploy:
    runs-on: ubuntu-latest
    environment: null #(Optional) If using GitHub Environments
    steps:
      - name: Checkout
        uses: actions/checkout@v3.6.0

      - name: Dev TF Plan Deploy
        uses: Pwd9000-ML/terraform-azurerm-plan@v1.2.6
        with:
          path: 'path-to-TFmodule' ## (Optional) Specify path TF module relevant to repo root. Default="."
          plan_mode: 'deploy' ## (Optional) Specify plan mode. Valid options are "deploy" or "destroy". Default="deploy"
          tf_version: 'latest' ## (Optional) Specifies version of Terraform to use. e.g: 1.1.0 Default="latest"
          tf_vars_file: 'tfvars-file-name' ## (Required) Specifies Terraform TFVARS file name inside module path
          tf_key: 'state-file-name' ## (Required) AZ backend - Specifies name that will be given to terraform state file and plan artifact
          enable_TFSEC: true ## (Optional) Enable TFSEC IaC scans (Private repo requires GitHub enterprise). Default=false
          az_resource_group: 'resource-group-name' ## (Required) AZ backend - AZURE Resource Group hosting terraform backend storage account
          az_storage_acc: 'storage-account-name' ## (Required) AZ backend - AZURE terraform backend storage account
          az_container_name: 'container-name' ## (Required) AZ backend - AZURE storage container hosting state files
          arm_client_id: ${{ secrets.AZURE_CLIENT_ID }} ## (Required) ARM Client ID
          arm_client_secret: ${{ secrets.AZURE_CLIENT_SECRET }} ## (Required)ARM Client Secret
          arm_subscription_id: ${{ secrets.AZURE_SUBSCRIPTION_ID }} ## (Required) ARM Subscription ID
          arm_tenant_id: ${{ secrets.AZURE_TENANT_ID }} ## (Required) ARM Tenant ID
          github_token: ${{ secrets.GITHUB_TOKEN }} ## (Required) Needed to comment output on PR's. ${{ secrets.GITHUB_TOKEN }} already has permissions.

  Apply_Dev_Deploy:
    needs: Plan_Dev_Deploy
    runs-on: ubuntu-latest
    environment: Development #(Optional) If using GitHub Environments
    steps:
      - name: Dev TF Deploy
        uses: Pwd9000-ML/terraform-azurerm-apply@v1.2.6
        with:
          plan_mode: 'deploy' ## (Optional) Specify plan mode. Valid options are "deploy" or "destroy". Default="deploy"
          tf_version: 'latest' ## (Optional) Specifies version of Terraform to use. e.g: 1.1.0 Default="latest"
          tf_key: 'state-file-name' ## (Required) Specifies name of the terraform state file and plan artifact to download
          az_resource_group: 'resource-group-name' ## (Required) AZ backend - AZURE Resource Group hosting terraform backend storage acc
          az_storage_acc: 'storage-account-name' ## (Required) AZ backend - AZURE terraform backend storage acc
          az_container_name: 'container-name' ## (Required) AZ backend - AZURE storage container hosting state files
          arm_client_id: ${{ secrets.AZURE_CLIENT_ID }} ## (Required) ARM Client ID
          arm_client_secret: ${{ secrets.AZURE_CLIENT_SECRET }} ## (Required)ARM Client Secret
          arm_subscription_id: ${{ secrets.AZURE_SUBSCRIPTION_ID }} ## (Required) ARM Subscription ID
          arm_tenant_id: ${{ secrets.AZURE_TENANT_ID }} ## (Required) ARM Tenant ID
